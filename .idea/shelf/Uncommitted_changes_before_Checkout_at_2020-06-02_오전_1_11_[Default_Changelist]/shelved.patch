Index: src/main/java/System.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.Arrays;\r\n\r\n/**\r\n * @author Yoonseop Shin\r\n */\r\npublic class System extends Function {\r\n\r\n    /**\r\n     * Default constructor\r\n     */\r\n    public System() {\r\n        functionNum = new int[6];\r\n        Arrays.fill(functionNum, 0);\r\n        functionNum[0] = 1;\r\n        functionNum[1] = 2;\r\n        functionNum[2] = 3;\r\n        functionNum[3] = 4;\r\n        status = 0b00;\r\n        type = 0;\r\n        selectedFunction = 0;\r\n        buzzer = new Buzzer();\r\n        blink = new Blink();\r\n    }\r\n\r\n    @Override\r\n    public void timeout() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void cancel() {\r\n\r\n    }\r\n\r\n    @Override\r\n    public void changeMode() {\r\n\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    private int[] functionNum;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private int selectedFunction;\r\n\r\n    /**\r\n     * 비트마스킹: 0b00 0b01 0b10 0b11\r\n     */\r\n    private int status;\r\n\r\n    /**\r\n     * 수정할 인덱스: 연, 월, 일, 시, 분, 초 [0, 5]\r\n     */\r\n    private int type;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private Buzzer buzzer;\r\n\r\n    /**\r\n     * \r\n     */\r\n    private Blink blink;\r\n\r\n\r\n\r\n\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void changeType() {\r\n        type = (type + 1) % 6;\r\n    }\r\n\r\n    /**\r\n     * @param diff: +1 or -1\r\n     */\r\n    public void changeValue(int diff) {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * @param selected\r\n     */\r\n    public void setFunction(int[] selected) {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void selectFunction() {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void beepBuzzer() {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void updateStatus() {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void set() {\r\n        // TODO implement here\r\n    }\r\n\r\n    /**\r\n     * \r\n     */\r\n    public void nextFunction() {\r\n        // TODO implement here\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- src/main/java/System.java	(revision c44fe77ae5752ca567c7ae340fca1e716fba48de)
+++ src/main/java/System.java	(date 1591027835085)
@@ -5,11 +5,21 @@
  */
 public class System extends Function {
 
-    /**
-     * Default constructor
-     */
+    // 6개 중 4개 인스턴스만 갖고있음.
+    // 알람, 알람커스텀은 항상 둘 다 포함되거나 포함되지 않아야 한다.
+    MainFrame GUI;
+    TimeKeeping timeKeeping;
+    Stopwatch stopwatch;
+    Timer timer;
+    D_day d_day;
+    Alarm alarm;
+    AlarmCustom alarmCustom;
+    int functionNumIdx = 0;
+
     public System() {
-        functionNum = new int[6];
+        GUI = new MainFrame(this);
+
+        functionNum = new int[4];
         Arrays.fill(functionNum, 0);
         functionNum[0] = 1;
         functionNum[1] = 2;
@@ -17,9 +27,193 @@
         functionNum[3] = 4;
         status = 0b00;
         type = 0;
-        selectedFunction = 0;
+        selectedFid = 1;
+
+        timeKeeping = new TimeKeeping(this);
+        stopwatch = new Stopwatch(this);
+        timer = new Timer(this);
+        d_day = new D_day(this);
+        alarm = null;
+        alarmCustom = null;
+
         buzzer = new Buzzer();
         blink = new Blink();
+
+    }
+
+    public static void main(String[] args) {
+        System system = new System();
+
+
+    }
+
+    public int checkStatus() {
+        if (status == 3) {
+            status = 1;
+            return 2;
+        }
+        else if (status == 2) {
+            status = 0;
+            return 1;
+        }
+        else if (status == 1) {
+            status = 0;
+            return 0;
+        }
+        return -1;
+    }
+
+    public void startBtnPressed() {
+        if (checkStatus() > -1)
+            return;
+        switch (selectedFid) {
+            case 1: // timekeeping에서 현재시간 설정하는 것
+                if (timeKeeping.getMode() == 0)
+                    return;
+                // GUI에 반영해야 함.
+                timeKeeping.changeValue(1);
+                int type = timeKeeping.getType();
+                int[] timeSettingValue = timeKeeping.getTimeSettingValue();
+                GUI.timekeepingView.setHour(String.format("%2s", timeSettingValue[0]));
+                GUI.timekeepingView.setMinute(String.format("%2s", timeSettingValue[1]));
+                GUI.timekeepingView.setCurTime2(String.format("%2s", timeSettingValue[2]));
+                GUI.timekeepingView.setDate(String.format("%2s", timeSettingValue[3]).substring(2, 4)
+                        + String.format("%2s", timeSettingValue[4])
+                        + String.format("%2s", timeSettingValue[5]));
+                // GUI type에 해당하는 부분이 깜빡이는 효과를 추가해야 함.
+
+                break;
+            case 2: // stopwatch
+
+                break;
+            case 3: // timer
+
+                break;
+            case 4: // d-day
+
+                break;
+            case 5: // alarm
+
+                break;
+            case 6: // alarm custom
+
+                break;
+        }
+
+    }
+
+    public void resetBtnPressed() {
+        if (checkStatus() > -1)
+            return;
+
+    }
+
+    public void selectBtnPressed() {
+        if (checkStatus() > -1)
+            return;
+        switch (selectedFid) {
+            case 1: // timekeeping에서 현재시간 설정하는 것
+                if (timeKeeping.getMode() == 0) {
+                    timeKeeping.changeMode();
+                }
+                else {
+                    timeKeeping.changeType();
+                }
+
+
+                break;
+            case 2: // stopwatch
+
+                break;
+            case 3: // timer
+
+                break;
+            case 4: // d-day
+
+                break;
+            case 5: // alarm
+
+                break;
+            case 6: // alarm custom
+
+                break;
+        }
+
+    }
+
+    public void modeBtnPressed() {
+        if (checkStatus() > -1)
+            return;
+        switch (selectedFid) {
+            case 1: // timekeeping에서 현재시간 설정하는 것
+                if (timeKeeping.getMode() == 0) {
+                    changeScreen();
+                }
+                else {
+                    timeKeeping.requestSave();
+                    // TODO 시간 저장 후 타임쓰레드에 문제있음.
+                    timeKeeping.changeMode();
+                }
+
+                break;
+            case 2: // stopwatch
+                if (stopwatch.getMode() == 0) {
+                    changeScreen();
+                }
+
+                break;
+            case 3: // timer
+                if (timer.getMode() == 0) {
+                    changeScreen();
+                }
+
+                break;
+            case 4: // d-day
+                if (d_day.getMode() == 0) {
+                    changeScreen();
+                }
+
+                break;
+            case 5: // alarm
+                if (alarm.getMode() == 0) {
+                    changeScreen();
+                }
+
+                break;
+            case 6: // alarm custom
+                if (alarmCustom.getMode() == 0) {
+                    changeScreen();
+                }
+
+                break;
+        }
+    }
+
+
+    public void changeScreen() {
+        functionNumIdx = (functionNumIdx + 1) % 4;
+        selectedFid = functionNum[functionNumIdx];
+
+        switch (selectedFid) {
+            case 1:
+                GUI.setView(GUI.timekeepingView);
+                break;
+            case 2:
+                GUI.setView(GUI.stopwatchView);
+                break;
+            case 3:
+                GUI.setView(GUI.timerView);
+                break;
+            case 4:
+                GUI.setView(GUI.d_dayView);
+                break;
+            case 5:
+                GUI.setView(GUI.alarmView);
+                break;
+            case 6:
+                GUI.setView(GUI.alarmCustomView);
+                break;
+        }
     }
 
     @Override
@@ -45,13 +239,15 @@
     /**
      * 
      */
-    private int selectedFunction;
+    private int selectedFid;
 
     /**
      * 비트마스킹: 0b00 0b01 0b10 0b11
      */
     private int status;
 
+
+
     /**
      * 수정할 인덱스: 연, 월, 일, 시, 분, 초 [0, 5]
      */
